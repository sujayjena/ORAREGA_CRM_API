using DocumentFormat.OpenXml.Spreadsheet;
using Newtonsoft.Json;
using OraRegaAV.Controllers.API;
using OraRegaAV.DBEntity;
using OraRegaAV.Helpers;
using OraRegaAV.Models;
using OraRegaAV.Models.Constants;
using System;
using System.Collections.Generic;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Migrations;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web.Http;

namespace OraRegaAV.Controllers
{
    public class StockOutAPIController : ApiCustomBaseController
    {
        private readonly dbOraRegaEntities db = new dbOraRegaEntities();
        private Response _response = new Response();

        public StockOutAPIController()
        {
            _response.IsSuccess = true;
        }

        [HttpPost]
        [Route("api/StockOutAPIController/SaveStockTransferOut_DOA")]
        public async Task<Response> SaveStockTransferOut_DOA(StockTransferOutRequest parameters)
        {
            try
            {
                if (parameters.PartsDetail.Count > 0)
                {
                    var vtblStockTransferOuts = new tblStockOut_DAO()
                    {
                        ChallanNo = Utilities.StockOut_DOA_NumberAutoGenerated(),
                        ComapnyId = parameters.ComapnyId,
                        BranchFromId = parameters.BranchFromId,
                        VendorToId = parameters.VendorToId,
                        TransferDate = parameters.TransferDate,
                        NewDocketNo = parameters.NewDocketNo,
                        StockTransferOutDate = DateTime.Now,
                        CreatedBy = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0),
                        CreatedDate = DateTime.Now,
                    };

                    db.tblStockOut_DAO.AddOrUpdate(vtblStockTransferOuts);

                    await db.SaveChangesAsync();

                    foreach (var item in parameters.PartsDetail.ToList())
                    {
                        //if (!db.tblStockTransferPartDetails.Where(u => u.PartId == item.PartId).Any() && item.PartId > 0)
                        //{
                        var vtblStockTransferPartDetails = new tblStockOut_DAO_PartDetails()
                        {
                            StockOut_DAOId = vtblStockTransferOuts.Id,
                            DocketNo = item.DocketNo,
                            PartId = item.PartId
                        };
                        db.tblStockOut_DAO_PartDetails.AddOrUpdate(vtblStockTransferPartDetails);
                        //}
                    }

                    await db.SaveChangesAsync();

                    _response.Message = "Stock transfer successfully";
                }
                else
                {
                    _response.Message = "Stock not transfer successfully";
                }
            }
            catch
            {
                _response.IsSuccess = false;
                throw;
            }
            return _response;
        }

        [HttpPost]
        [Route("api/StockOutAPIController/GetStockOut_DAO_ChallanList")]
        public async Task<Response> GetStockOut_DAO_ChallanList(StockTransferOutDOA_DefectiveSearchParameters parameters)
        {
            try
            {
                List<GetStockOut_DAO_ChallanList_Result> advanceList = new List<GetStockOut_DAO_ChallanList_Result>();
                var userId = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0);
                var vTotal = new ObjectParameter("Total", typeof(int));
                if (userId > 0)
                {
                    advanceList = await Task.Run(() => db.GetStockOut_DAO_ChallanList(parameters.ComapnyId, parameters.BranchFromId, parameters.DockerNo, parameters.SearchValue, parameters.PageSize, parameters.PageNo, vTotal, userId).ToList());
                }

                _response.TotalCount = Convert.ToInt32(vTotal.Value);
                _response.Data = advanceList;
            }
            catch (Exception ex)
            {
                _response.IsSuccess = false;
                _response.Message = ValidationConstant.InternalServerError;
                LogWriter.WriteLog(ex);
            }

            return _response;
        }

        [HttpPost]
        [Route("api/StockTransferAPI/GetStockOut_DAO_ByChallanNumber")]
        public Response GetStockOut_DAO_ByChallanNumber(string ChallanNo = "")
        {
            try
            {
                var stockTransferResponse = new StockOutResponse();

                var userId = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0);
                if (userId > 0)
                {
                    var vStockTransferOutObj = db.GetStockOutDOAByChallanNumber(ChallanNo).FirstOrDefault();

                    if (vStockTransferOutObj != null)
                    {
                        var vCompaniesObj = db.tblCompanies.Where(x => x.Id == vStockTransferOutObj.ComapnyId).FirstOrDefault();

                        stockTransferResponse.Id = vStockTransferOutObj.Id;
                        stockTransferResponse.ChallanNo = vStockTransferOutObj.ChallanNo;
                        stockTransferResponse.CompanyId = vStockTransferOutObj.ComapnyId;
                        stockTransferResponse.CompanyName = vCompaniesObj != null ? vCompaniesObj.CompanyName : string.Empty;
                        stockTransferResponse.TransferDate = vStockTransferOutObj.TransferDate;
                        stockTransferResponse.NewDocketNo = vStockTransferOutObj.NewDocketNo;
                        stockTransferResponse.StockTransferOutDate = vStockTransferOutObj.StockTransferOutDate;

                        stockTransferResponse.CreatedBy = vStockTransferOutObj.CreatedBy;
                        stockTransferResponse.CreatorName = vStockTransferOutObj.CreatorName;
                        stockTransferResponse.CreatedDate = vStockTransferOutObj.CreatedDate;

                        // Branch From
                        var vTotalFrom = new ObjectParameter("Total", typeof(int));
                        var vBranchFromDetail = db.GetBranchList(vStockTransferOutObj.ComapnyId, vStockTransferOutObj.BranchFromId.ToString(),"",0,0, vTotalFrom, 0).ToList().FirstOrDefault();
                        if (vBranchFromDetail != null)
                        {
                            stockTransferResponse.BranchFrom.Id = vBranchFromDetail.Id;
                            stockTransferResponse.BranchFrom.BranchName = vBranchFromDetail.BranchName;
                            stockTransferResponse.BranchFrom.RegistrationNumber = vBranchFromDetail.RegistrationNumber;
                            stockTransferResponse.BranchFrom.CompanyType = vBranchFromDetail.CompanyType;
                            stockTransferResponse.BranchFrom.GSTNumber = vBranchFromDetail.GSTNumber;
                            stockTransferResponse.BranchFrom.AddressLine1 = vBranchFromDetail.AddressLine1;
                            stockTransferResponse.BranchFrom.AddressLine2 = vBranchFromDetail.AddressLine2;
                            stockTransferResponse.BranchFrom.StateName = vBranchFromDetail.StateName;
                            stockTransferResponse.BranchFrom.StateCode = vBranchFromDetail.StateCode;
                            stockTransferResponse.BranchFrom.CityName = vBranchFromDetail.CityName;
                            stockTransferResponse.BranchFrom.AreaName = vBranchFromDetail.AreaName;
                            stockTransferResponse.BranchFrom.Pincode = vBranchFromDetail.Pincode;
                            stockTransferResponse.BranchFrom.DepartmentHead = vBranchFromDetail.DepartmentHead;
                            stockTransferResponse.BranchFrom.MobileNo = vBranchFromDetail.MobileNo;
                            stockTransferResponse.BranchFrom.EmailId = vBranchFromDetail.EmailId;
                        }

                        // Branch To
                        var vTotalTo = new ObjectParameter("Total", typeof(int));
                        //var vBranchToDetail = db.GetBranchList(vStockTransferOutObj.ComapnyId, vStockTransferOutObj.BranchToId, "", 0, 0, vTotalTo, 0).ToList().FirstOrDefault();
                        var vVendorToDetail = db.GetVendorsList(0, 0, 0, 0, true, "", 0, 0, vTotalTo).ToList().Where(x=>x.Id == vStockTransferOutObj.VendorToId).FirstOrDefault();
                        if (vVendorToDetail != null)
                        {
                            stockTransferResponse.VendorTo.Id = vVendorToDetail.Id;
                            stockTransferResponse.VendorTo.Name = vVendorToDetail.Name;
                            stockTransferResponse.VendorTo.ContactPerson = vVendorToDetail.ContactPerson;
                            //stockTransferResponse.BranchTo.RegistrationNumber = vBranchToDetail.RegistrationNumber;
                            //stockTransferResponse.BranchTo.CompanyType = vBranchToDetail.CompanyType;
                            stockTransferResponse.VendorTo.GSTNo = vVendorToDetail.GSTNo;
                            stockTransferResponse.VendorTo.Address = vVendorToDetail.Address;
                            //stockTransferResponse.BranchTo.AddressLine2 = vBranchToDetail.AddressLine2;
                            stockTransferResponse.VendorTo.StateName = vVendorToDetail.StateName;
                            //stockTransferResponse.BranchTo.StateCode = vVendorToDetail.StateCode;
                            stockTransferResponse.VendorTo.CityName = vVendorToDetail.CityName;
                            stockTransferResponse.VendorTo.AreaName = vVendorToDetail.AreaName;
                            stockTransferResponse.VendorTo.Pincode = vVendorToDetail.Pincode;
                            //stockTransferResponse.BranchTo.DepartmentHead = vVendorToDetail.DepartmentHead;
                            stockTransferResponse.VendorTo.MobileNo = vVendorToDetail.MobileNo;
                            stockTransferResponse.VendorTo.EmailId = vVendorToDetail.EmailId;
                        }

                        // Part List
                        var vStockTransferOutPartDetailList = db.tblStockTransferPartDetails.Where(x => x.StockTransferOutId == vStockTransferOutObj.Id).ToList();

                        foreach (var item in vStockTransferOutPartDetailList)
                        {
                            var vTotal = new ObjectParameter("Total", typeof(int));
                            var vPartObj = db.GetPartDetailList(item.PartId, 0, "", "", 0, 0, 0, vTotal).ToList().FirstOrDefault();

                            var vItemObj = new StockOutPartDetailResponse()
                            {
                                Id = vPartObj.Id,
                                UniqueCode = vPartObj.UniqueCode,
                                PartNumber = vPartObj.PartNumber,
                                PartName = vPartObj.PartName,
                                PartDescription = vPartObj.PartDescription,
                                HSNCode = vPartObj.HSNCode,
                                CTSerialNo = vPartObj.CTSerialNo,
                                PartStatus = vPartObj.PartStatus,
                                SalePrice = vPartObj.SalePrice,
                                ReceiveFrom = vPartObj.ReceiveFrom,
                                ReceiveDate = vPartObj.ReceiveDate,
                                DocketNo = vPartObj.DocketNo,
                                Quantity = vPartObj.Quantity,
                                StockPartStatus = vPartObj.StockPartStatus,
                                PurchasePrice = vPartObj.PurchasePrice,
                                VendorName = vPartObj.VendorName,
                                TotalPrice = vPartObj.Quantity * vPartObj.SalePrice
                            };

                            stockTransferResponse.PartDetail.Add(vItemObj);
                        }
                    }
                }

                _response.Data = stockTransferResponse;
            }
            catch (Exception ex)
            {
                _response.IsSuccess = false;
                _response.Message = ValidationConstant.InternalServerError;
                LogWriter.WriteLog(ex);
            }

            return _response;
        }

        [HttpPost]
        [Route("api/StockOutAPI/SaveStockTransferOut_Defective")]
        public async Task<Response> SaveStockTransferOut_Defective(StockTransferOut_Defective_Request parameters)
        {
            try
            {
                if (parameters.PartsDetail.Count > 0)
                {
                    var vtblStockTransferOuts = new tblStockOut_Defective()
                    {
                        ChallanNo = Utilities.StockOut_Defective_NumberAutoGenerated(),
                        ComapnyId = parameters.ComapnyId,
                        BranchFromId = parameters.BranchFromId,
                        VendorToId = parameters.VendorToId,
                        TransferDate = parameters.TransferDate,
                        NewDocketNo = parameters.NewDocketNo,
                        StockTransferOutDate = DateTime.Now,
                        CreatedBy = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0),
                        CreatedDate = DateTime.Now,
                    };

                    db.tblStockOut_Defective.AddOrUpdate(vtblStockTransferOuts);

                    await db.SaveChangesAsync();

                    foreach (var item in parameters.PartsDetail.ToList())
                    {
                        //if (!db.tblStockTransferPartDetails.Where(u => u.PartId == item.PartId).Any() && item.PartId > 0)
                        //{
                        var vtblStockTransferPartDetails = new tblStockOut_Defective_PartDetails()
                        {
                            StockOut_DefectiveId = vtblStockTransferOuts.Id,
                            DocketNo = item.DocketNo,
                            PartId = item.PartId
                        };
                        db.tblStockOut_Defective_PartDetails.AddOrUpdate(vtblStockTransferPartDetails);
                        //}
                    }

                    await db.SaveChangesAsync();

                    _response.Message = "Stock transfer successfully";
                }
                else
                {
                    _response.Message = "Stock not transfer successfully";
                }
            }
            catch
            {
                _response.IsSuccess = false;
                throw;
            }
            return _response;
        }

        [HttpPost]
        [Route("api/StockOutAPI/GetStockOut_Defective_ChallanList")]
        public async Task<Response> GetStockOut_Defective_ChallanList(StockTransferOutDOA_DefectiveSearchParameters parameters)
        {
            try
            {
                List<GetStockOut_Defective_ChallanList_Result> advanceList = new List<GetStockOut_Defective_ChallanList_Result>();
                var userId = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0);
                var vTotal = new ObjectParameter("Total", typeof(int));
                if (userId > 0)
                {
                    advanceList = await Task.Run(() => db.GetStockOut_Defective_ChallanList(parameters.ComapnyId, parameters.BranchFromId, parameters.DockerNo, parameters.SearchValue, parameters.PageSize, parameters.PageNo, vTotal, userId).ToList());
                }

                _response.TotalCount = Convert.ToInt32(vTotal.Value);
                _response.Data = advanceList;
            }
            catch (Exception ex)
            {
                _response.IsSuccess = false;
                _response.Message = ValidationConstant.InternalServerError;
                LogWriter.WriteLog(ex);
            }

            return _response;
        }

        [HttpPost]
        [Route("api/StockOutAPI/GetStockOut_Defective_ByChallanNumber")]
        public Response GetStockOut_Defective_ByChallanNumber(string ChallanNo = "")
        {
            try
            {
                //var stockTransferResponse = new StockOutResponse();
                var stockTransferResponse = new StockOut_Defective_Response();

                var userId = Convert.ToInt32(ActionContext.Request.Properties["UserId"] ?? 0);
                if (userId > 0)
                {
                    var vStockTransferOutObj = db.GetStockOutDefectiveByChallanNumber(ChallanNo).FirstOrDefault();

                    if (vStockTransferOutObj != null)
                    {
                        var vCompaniesObj = db.tblCompanies.Where(x => x.Id == vStockTransferOutObj.ComapnyId).FirstOrDefault();

                        stockTransferResponse.Id = vStockTransferOutObj.Id;
                        stockTransferResponse.ChallanNo = vStockTransferOutObj.ChallanNo;
                        stockTransferResponse.CompanyId = vStockTransferOutObj.ComapnyId;
                        stockTransferResponse.CompanyName = vCompaniesObj != null ? vCompaniesObj.CompanyName : string.Empty;
                        stockTransferResponse.TransferDate = vStockTransferOutObj.TransferDate;
                        stockTransferResponse.NewDocketNo = vStockTransferOutObj.NewDocketNo;
                        stockTransferResponse.StockTransferOutDate = vStockTransferOutObj.StockTransferOutDate;

                        stockTransferResponse.CreatedBy = vStockTransferOutObj.CreatedBy;
                        stockTransferResponse.CreatorName = vStockTransferOutObj.CreatorName;
                        stockTransferResponse.CreatedDate = vStockTransferOutObj.CreatedDate;

                        // Branch From
                        var vTotalFrom = new ObjectParameter("Total", typeof(int));
                        var vBranchFromDetail = db.GetBranchList(vStockTransferOutObj.ComapnyId, vStockTransferOutObj.BranchFromId.ToString(), "", 0, 0, vTotalFrom, 0).ToList().FirstOrDefault();
                        if (vBranchFromDetail != null)
                        {
                            stockTransferResponse.BranchFrom.Id = vBranchFromDetail.Id;
                            stockTransferResponse.BranchFrom.BranchName = vBranchFromDetail.BranchName;
                            stockTransferResponse.BranchFrom.RegistrationNumber = vBranchFromDetail.RegistrationNumber;
                            stockTransferResponse.BranchFrom.CompanyType = vBranchFromDetail.CompanyType;
                            stockTransferResponse.BranchFrom.GSTNumber = vBranchFromDetail.GSTNumber;
                            stockTransferResponse.BranchFrom.AddressLine1 = vBranchFromDetail.AddressLine1;
                            stockTransferResponse.BranchFrom.AddressLine2 = vBranchFromDetail.AddressLine2;
                            stockTransferResponse.BranchFrom.StateName = vBranchFromDetail.StateName;
                            stockTransferResponse.BranchFrom.StateCode = vBranchFromDetail.StateCode;
                            stockTransferResponse.BranchFrom.CityName = vBranchFromDetail.CityName;
                            stockTransferResponse.BranchFrom.AreaName = vBranchFromDetail.AreaName;
                            stockTransferResponse.BranchFrom.Pincode = vBranchFromDetail.Pincode;
                            stockTransferResponse.BranchFrom.DepartmentHead = vBranchFromDetail.DepartmentHead;
                            stockTransferResponse.BranchFrom.MobileNo = vBranchFromDetail.MobileNo;
                            stockTransferResponse.BranchFrom.EmailId = vBranchFromDetail.EmailId;
                        }

                        // Vendor To
                        var vTotalTo = new ObjectParameter("Total", typeof(int));
                        //var vBranchToDetail = db.GetBranchList(vStockTransferOutObj.ComapnyId, vStockTransferOutObj.BranchToId.ToString(),"", 0, 0, vTotalTo, 0).ToList().FirstOrDefault();
                        var vVendorToDetail = db.GetVendorsList(0, 0, 0, 0, true, "", 0, 0, vTotalTo).ToList().Where(x => x.Id == vStockTransferOutObj.VendorToId).FirstOrDefault();
                        if (vVendorToDetail != null)
                        {
                            stockTransferResponse.VendorTo.Id = vVendorToDetail.Id;
                            stockTransferResponse.VendorTo.Name = vVendorToDetail.Name;
                            stockTransferResponse.VendorTo.ContactPerson = vVendorToDetail.ContactPerson;
                            //stockTransferResponse.BranchTo.RegistrationNumber = vBranchToDetail.RegistrationNumber;
                            //stockTransferResponse.BranchTo.CompanyType = vBranchToDetail.CompanyType;
                            stockTransferResponse.VendorTo.GSTNo = vVendorToDetail.GSTNo;
                            stockTransferResponse.VendorTo.Address = vVendorToDetail.Address;
                            //stockTransferResponse.BranchTo.AddressLine2 = vBranchToDetail.AddressLine2;
                            stockTransferResponse.VendorTo.StateName = vVendorToDetail.StateName;
                            //stockTransferResponse.BranchTo.StateCode = vVendorToDetail.StateCode;
                            stockTransferResponse.VendorTo.CityName = vVendorToDetail.CityName;
                            stockTransferResponse.VendorTo.AreaName = vVendorToDetail.AreaName;
                            stockTransferResponse.VendorTo.Pincode = vVendorToDetail.Pincode;
                            //stockTransferResponse.BranchTo.DepartmentHead = vVendorToDetail.DepartmentHead;
                            stockTransferResponse.VendorTo.MobileNo = vVendorToDetail.MobileNo;
                            stockTransferResponse.VendorTo.EmailId = vVendorToDetail.EmailId;
                        }

                        // Part List
                        var vStockTransferOutPartDetailList = db.tblStockTransferPartDetails.Where(x => x.StockTransferOutId == vStockTransferOutObj.Id).ToList();

                        foreach (var item in vStockTransferOutPartDetailList)
                        {
                            var vTotal = new ObjectParameter("Total", typeof(int));
                            var vPartObj = db.GetPartDetailList(item.PartId, 0, "", "", 0, 0, 0, vTotal).ToList().FirstOrDefault();

                            var vItemObj = new StockOutPartDetailResponse()
                            {
                                Id = vPartObj.Id,
                                UniqueCode = vPartObj.UniqueCode,
                                PartNumber = vPartObj.PartNumber,
                                PartName = vPartObj.PartName,
                                PartDescription = vPartObj.PartDescription,
                                HSNCode = vPartObj.HSNCode,
                                CTSerialNo = vPartObj.CTSerialNo,
                                PartStatus = vPartObj.PartStatus,
                                SalePrice = vPartObj.SalePrice,
                                ReceiveFrom = vPartObj.ReceiveFrom,
                                ReceiveDate = vPartObj.ReceiveDate,
                                DocketNo = vPartObj.DocketNo,
                                Quantity = vPartObj.Quantity,
                                StockPartStatus = vPartObj.StockPartStatus,
                                PurchasePrice = vPartObj.PurchasePrice,
                                VendorName = vPartObj.VendorName,
                                TotalPrice = vPartObj.Quantity * vPartObj.SalePrice
                            };

                            stockTransferResponse.PartDetail.Add(vItemObj);
                        }
                    }
                }

                _response.Data = stockTransferResponse;
            }
            catch (Exception ex)
            {
                _response.IsSuccess = false;
                _response.Message = ValidationConstant.InternalServerError;
                LogWriter.WriteLog(ex);
            }

            return _response;
        }
    }
}
